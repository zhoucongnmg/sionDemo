/*
 * File: app/view/EmployInfo.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('sion.demo.view.EmployInfo', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.field.Text',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View'
    ],

    height: 443,
    width: 483,
    layout: 'fit',
    title: '员工信息',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'panel',
                    dock: 'top',
                    layout: 'fit',
                    title: '',
                    items: [
                        {
                            xtype: 'textfield',
                            fieldLabel: '姓名',
                            name: 'name'
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            text: '查询',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick2,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 's_icon_user_add',
                            text: '新增',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 's_icon_user_delete',
                            text: '删除',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick1,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    autoScroll: true,
                    title: '',
                    store: 'EmployInfo',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: '姓名'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'age',
                            text: '年龄'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'sex',
                            text: '性别'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'email',
                            text: '邮箱'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'address',
                            text: '住址'
                        }
                    ],
                    listeners: {
                        itemdblclick: {
                            fn: me.onGridpanelItemDblClick,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick2: function(button, e, eOpts) {
        var me = this,
            grid = me.down('grid'),
            name = me.down("textfield");


        // grid.getStore().load({
        //     params:{
        //         name:name.getValue()
        //     },
        //     url:"demo/emp/query",
        //     callback: function(resp){
        //         console.log(resp);
        //     }
        // });

        Ext.Ajax.request({
            url:"demo/emp/query",
            params: {
                name:name.getValue()
            },
            method:"post",
            success:function(response){
                var grid = me.down("gridpanel");
                var records = Ext.JSON.decode(response.responseText);
                grid.getStore().loadData(records);
            }
        });
    },

    onButtonClick: function(button, e, eOpts) {
        var me = this,
            emp = Ext.create(me.getNs()+'.view.EmployEdit');
        emp.show();
    },

    onButtonClick1: function(button, e, eOpts) {
        var me =this,
        grid = me.down('gridpanel'),
        record=grid.getSelectionModel().getLastSelected();
        record.destroy();
    },

    onGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var me = this,
            emp = Ext.create(me.getNs()+'.view.EmployEdit',{
                _emp: record
            });
        emp.show();
    }

});